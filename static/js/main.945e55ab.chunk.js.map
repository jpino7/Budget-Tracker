{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/DepositWithdraw.js","components/Transaction.js","components/TransactionHistory.js","components/Form.js","App.js","index.js"],"names":["Header","className","state","action","type","transactions","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","addTransaction","transaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","DepositWithdraw","amounts","deposit","filter","withdraw","role","Transaction","transactionSymbol","text","Math","abs","TransactionHistory","key","id","Form","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.945e55ab.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n\r\n        <nav className=\"navbar navbar-light\">\r\n            <span className=\"navbar-brand mb-0 h1\">Budget Tracker</span>\r\n        </nav>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial State\r\nconst initialState = {\r\n    transactions: []\r\n\r\n        // Dummy Transactions\r\n        // { id: 1, text: 'Herbalife Formula 1', amount: -48 },\r\n        // { id: 2, text: 'TRHC Pay', amount: 1500 },\r\n        // { id: 3, text: 'Sweet Sweat', amount: -25 },\r\n        // { id: 4, text: 'Herbalife Prolessa Duo', amount: -89 },\r\n        // { id: 5, text: 'Progressive Car Insurance', amount: -167 }\r\n}\r\n\r\n// Creating Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Add Action\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n\r\n    return (\r\n        <div className=\"row mx-auto\">\r\n                <div className=\"balance\">\r\n                    <h2>Balance:</h2>\r\n                    <h3>${total}</h3>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n\r\nexport const DepositWithdraw = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const deposit = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0)\r\n        .toFixed(2);\r\n\r\n    const withdraw = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1\r\n    ).toFixed(2);\r\n\r\n\r\n    return (\r\n        <div className=\"dep-wd-container row mx-auto\">\r\n            <div className=\"alert alert-success\" role=\"alert\">\r\n                <h4>Deposit: </h4>\r\n    <p className=\"depo-plus\">{deposit}</p>\r\n            </div>\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                <h4>Withdraw: </h4>\r\n    <p className=\"wd-minus\">{withdraw}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DepositWithdraw\r\n","import React from 'react'\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n    const transactionSymbol = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className=\"minus\">\r\n            {transaction.text} <span>{transactionSymbol}${Math.abs(transaction.amount)}</span>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { Transaction } from './Transaction'\r\n\r\n\r\nexport const TransactionHistory = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div className=\"row mx-auto\">\r\n            <div className=\"transactionHistory\">\r\n                <ul className=\"history\">\r\n                    <h3>Transaction History</h3>\r\n                    {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransactionHistory\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n\r\nexport const Form = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 1000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mx-auto\">\r\n            <div className=\"addTransaction\">\r\n                <h3>Add Transaction</h3>\r\n                <form onSubmit={onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"text\">Transaction: </label>\r\n                        <input className=\"form-control\" type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter Transaction Type\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"amount\">Amount [ (-) Withdraw | (+) Deposit ]: </label>\r\n                        <input className=\"form-control\" type=\"number\" onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter Amount\" />\r\n                    </div>\r\n                    <button className=\"addTransaction-btn btn btn-success\">Add Transaction</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { DepositWithdraw } from './components/DepositWithdraw';\nimport { TransactionHistory } from './components/TransactionHistory';\nimport { Form } from './components/Form';\nimport { GlobalProvider } from './context/GlobalState';\nimport './App.css';\n\nfunction App() {\n  return (\n\n    <GlobalProvider>\n        <Header />\n        <div className=\"container\">\n          <Balance />\n          <DepositWithdraw />\n          <Form />\n          <TransactionHistory />\n        </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}